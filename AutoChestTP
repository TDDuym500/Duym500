-- Phát nhạc khi chạy mã
local joinSound = Instance.new("Sound", workspace)
joinSound.SoundId = "rbxassetid://"
joinSound.Volume, joinSound.Looped = 3, false
joinSound:Play()

-- Hiển thị thông báo
game.StarterGui:SetCore("SendNotification", {
    Title = "By : NomDom",
    Text = "Địt mẹ thằng lồn",
    Duration = 1000000
})

local Notifications = game.ReplicatedStorage:WaitForChild("Notification")
for _, msg in pairs({
    "<Color=Red>NomDom On Top<Color=/>",
    "<Color=Green>Cảm ơn vì đã sử dụng<Color=/>",
    "<Color=Yellow>Hạn chế dùng vì rất dễ bị band<Color=/>"
}) do
    require(Notifications).new(msg):Display()
end

-- Biến và hàm chính
local Player = game.Players.LocalPlayer
local ChestCount, ResetThreshold = 0, 5 -- Reset sau khi nhặt đúng 5 rương
local FailedTeleports, MaxFailedTeleports = 0, 3 -- Reset nếu dịch chuyển 3 lần mà không nhặt được
local CollectedChests = {} -- Danh sách rương đã nhặt

local function getCharacter()
    while not Player.Character do Player.CharacterAdded:Wait() end
    return Player.Character:WaitForChild("HumanoidRootPart").Parent
end

local function Teleport(targetCFrame)
    local root = getCharacter().HumanoidRootPart
    root.CFrame = targetCFrame
end

local function getChests()
    local chests = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj.Name:find("Chest") and obj:IsA("Part") and obj:FindFirstChild("TouchInterest") then
            -- Chỉ nhặt rương chưa có trong danh sách đã nhặt
            if not CollectedChests[obj] then
                table.insert(chests, obj)
            end
        end
    end
    table.sort(chests, function(a, b)
        return (getCharacter().HumanoidRootPart.Position - a.Position).Magnitude < 
               (getCharacter().HumanoidRootPart.Position - b.Position).Magnitude
    end)
    return chests
end

task.spawn(function()
    while task.wait(0.5) do
        local chests = getChests()

        -- Nếu không còn rương mới nào, reset danh sách rương đã nhặt để nhặt rương mới sinh ra
        if #chests == 0 and next(CollectedChests) ~= nil then
            CollectedChests = {} -- Xóa danh sách rương đã nhặt
            print("Tất cả rương đã nhặt xong, reset danh sách để nhặt rương mới!")
        end

        if #chests > 0 then
            local targetChest = chests[1]
            local oldPosition = getCharacter().HumanoidRootPart.Position -- Lưu vị trí trước khi TP
            Teleport(targetChest.CFrame)

            -- Chờ để kiểm tra xem rương đã bị nhặt chưa
            task.wait(0.5) 

            -- Kiểm tra nếu rương đã biến mất hoặc không còn TouchInterest
            if not targetChest.Parent or not targetChest:FindFirstChild("TouchInterest") then
                ChestCount = ChestCount + 1
                FailedTeleports = 0 -- Reset biến đếm dịch chuyển thất bại
                CollectedChests[targetChest] = true -- Đánh dấu rương đã nhặt
                print("Đã nhặt được rương, tổng số rương: ", ChestCount)
            else
                -- Nếu chưa nhặt được rương, quay lại vị trí cũ và tăng FailedTeleports
                FailedTeleports = FailedTeleports + 1
                Teleport(CFrame.new(oldPosition))
                print("Dịch chuyển thất bại, số lần thất bại:", FailedTeleports)
            end

            -- Reset nếu quá nhiều lần dịch chuyển thất bại
            if FailedTeleports >= MaxFailedTeleports then
                print("Reset nhân vật do dịch chuyển thất bại quá nhiều!")
                FailedTeleports = 0
                Player.Character:BreakJoints() -- Reset nhân vật
            end

            -- Reset sau đúng 5 rương đã nhặt
            if ChestCount >= ResetThreshold then
                ChestCount = 0
                print("Reset nhân vật sau khi nhặt đủ 5 rương!")
                Player.Character:BreakJoints() -- Reset nhân vật
            end
        end
    end
end)
